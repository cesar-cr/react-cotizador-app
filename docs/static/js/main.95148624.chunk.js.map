{"version":3,"sources":["components/Header.js","helpers.js","components/Formulario.js","components/Resumen.js","components/Resultado.js","App.js","reportWebVitals.js","index.js"],"names":["ContenedorHeader","styled","header","TextHeader","h1","Header","titulo","primeraMayuscula","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRadio","input","Boton","button","Error","Formulario","guardarResumen","useState","marca","year","plan","datos","guardarDatos","error","guardarError","obtenerInformacion","e","target","name","value","onSubmit","preventDefault","trim","resultado","Date","getFullYear","obtenerDiferenciaYear","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","console","log","cotizacion","onChange","type","checked","ContenedorResumen","Resumen","Mensaje","p","ResultadoCotizacion","TextoCotizacion","Resultado","Container","ContainerForm","App","resumen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95148624.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nconst ContenedorHeader = styled.header`\n  background-color: #2C6DEA;\n  padding: 10px;\n  font-weight: bold;\n  color: #FFFFFF;\n`;\n\nconst TextHeader = styled.h1`\n    font-size: 2rem;\n    margin: 0;\n    font-family: 'Slabo 27px', serif;\n    text-align: center;\n`;\n\nconst Header = ({titulo}) => {\n    return (\n        <ContenedorHeader>\n            <TextHeader>{ titulo }</TextHeader>\n        </ContenedorHeader>\n    )\n}\n\nHeader.propTypes = {\n    titulo : PropTypes.string.isRequired\n}\n\nexport default Header;\n","export function obtenerDiferenciaYear(year) {\n    return new Date().getFullYear() - year;\n}\n\nexport function calcularMarca(marca) {\n    let incremento;\n\n    switch (marca) {\n        case 'europeo':\n            incremento = 1.30;\n            break;\n        case 'americano':\n            incremento = 1.15;\n            break;\n        case 'asiatico':\n            incremento = 1.05;\n            break;\n        default:\n            break;\n    }\n    return incremento;\n}\n\nexport function obtenerPlan(plan){\n    return (plan === 'basico') ? 1.20 : 1.50;\n}\n\nexport function primeraMayuscula(texto) {\n    return texto.charAt(0).toUpperCase() + texto.slice(1);\n}","import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { obtenerDiferenciaYear, calcularMarca, obtenerPlan } from '../helpers';\n\nconst Campo = styled.div`\n    display: flex;\n    margin-bottom: 1rem;\n    align-items: center;\n`;\n\nconst Label = styled.label`\n    flex: 0 0 100px;\n`;\n\nconst Select = styled.select`\n    display: block;\n    width: 100%;\n    padding: 1rem;\n    border: 1px solid #e1e1e1;\n    --webkit-appearance: none;\n`;\n\nconst InputRadio = styled.input`\n    margin: 0 1rem;\n`;\n\nconst Boton = styled.button`\n    background-color: #00838F;\n    font-size: 16px;\n    width: 100%;\n    padding: 1rem;\n    text-transform: uppercase;\n    font-weight: bold;\n    border: none;\n    transition: background-color .3s ease;\n    margin-top: 2rem;\n    &:hover{\n        background-color: #26C6DA;\n        cursor: pointer;\n        color: #fff;\n    }\n`;\n\nconst Error = styled.div`\n    background-color: red;\n    color: white;\n    padding: 1rem;\n    width: 100%;\n    text-align: center;\n    margin-bottom: 2rem;\n`;\n\nconst Formulario = ({ guardarResumen }) => {\n\n    const [datos, guardarDatos] = useState({\n        marca: '',\n        year: '',\n        plan: ''\n    });\n\n    const [error, guardarError] = useState(false);\n\n    // extraer los valores\n    const { marca, year, plan } = datos;\n\n    // obtener datos del formulario y poner en el state\n    const obtenerInformacion = (e) => {\n        guardarDatos({\n            ...datos,\n            [e.target.name] : e.target.value\n        });\n    }\n\n    // cuando el usuario da click en submit\n    const cotizarSeguro = (e) => {\n        e.preventDefault();\n\n        // validar que no esten vacios los datos\n        if (marca.trim() === '' || year.trim() === '' || plan === '') {\n            guardarError(true);\n            return;\n        }\n        // quitar el errores\n        guardarError(false);\n        // Tener una base de años 2000\n        let resultado = 2000;\n        // obtener la diferencia de años\n        const diferencia = obtenerDiferenciaYear(year);\n        // por cada año hay que restar el 3%\n        resultado -= ((diferencia * 3)) / 100;\n        // Americano 15%\n        // Asiatico 5%\n        // Europeo 30%\n        resultado = calcularMarca(marca) * resultado;\n        \n        // basico aumento 20%\n        // completo 50%\n        const incrementoPlan = obtenerPlan(plan);\n        resultado = parseFloat(incrementoPlan * resultado).toFixed(2);\n        console.log(resultado);\n        // total\n        guardarResumen({\n            cotizacion: resultado,\n            datos\n        })\n    }\n\n    return (\n        <form\n            onSubmit={cotizarSeguro}>\n            \n            { error && <Error>Todos los campos son obligatorios</Error>}\n            <Campo>\n                <Label>Marca</Label>\n                <Select\n                    name=\"marca\"\n                    value={marca}\n                    onChange={obtenerInformacion}>\n                    <option value=\"\">-- Seleccione --</option>\n                    <option value=\"americano\">Americano</option>\n                    <option value=\"europeo\">Europeo</option>\n                    <option value=\"asiatico\">Asiatico</option>\n                </Select>\n            </Campo>\n\n            <Campo>\n                <Label>Año</Label>\n                <Select\n                    name=\"year\"\n                    value={year}\n                    onChange={obtenerInformacion}>\n                    <option value=\"\">-- Seleccione --</option>\n                    <option value=\"2023\">2023</option>\n                    <option value=\"2022\">2022</option>\n                    <option value=\"2021\">2021</option>\n                    <option value=\"2020\">2020</option>\n                    <option value=\"2019\">2019</option>\n                    <option value=\"2018\">2018</option>\n                    <option value=\"2017\">2017</option>\n                    <option value=\"2016\">2016</option>\n                    <option value=\"2015\">2015</option>\n                    <option value=\"2014\">2014</option>\n                    <option value=\"2013\">2013</option>\n                    <option value=\"2012\">2012</option>\n                </Select>\n            </Campo>\n\n            <Campo>\n                <Label>Plan</Label>\n                <InputRadio\n                    type=\"radio\"\n                    name=\"plan\"\n                    value=\"basico\"\n                    checked={plan === \"basico\"}\n                    onChange={obtenerInformacion}\n                /> Básico\n                <InputRadio\n                    type=\"radio\"\n                    name=\"plan\"\n                    value=\"completo\"\n                    checked={plan === \"completo\"}\n                    onChange={obtenerInformacion}\n                /> Completo\n            </Campo>\n\n            <Boton type=\"submit\">\n                Cotizar\n            </Boton>\n        </form>\n    )\n}\n\nFormulario.propTypes = {\n    guardarResumen: PropTypes.func.isRequired\n}\n\nexport default Formulario;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { primeraMayuscula } from '../helpers';\n\nconst ContenedorResumen = styled.div`\n    padding: 1rem;\n    text-align: center;\n    background-color: #00838F;\n    color: #fff;\n    margin-top: 1rem;\n`\n\nconst Resumen = ({ datos }) => {\n\n    const { marca, year, plan } = datos;\n\n    if (marca.trim() === '' || year.trim() == '' || plan.trim() === '') {\n        return null;\n    }\n\n    return (\n        <ContenedorResumen>\n            <h2>Resumen de cotizacion</h2>\n            <ul>\n                <li>Marca: {primeraMayuscula(marca)}</li>\n                <li>Año: {year}</li>\n                <li>Plan: {primeraMayuscula(plan)}</li>\n            </ul>\n        </ContenedorResumen>\n    )\n}\n\nResumen.propTypes = {\n    datos : PropTypes.object.isRequired\n}\n\nexport default Resumen\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nconst Mensaje = styled.p`\n    background-color: rgb(127,224,237);\n    margin-top: 2rem;\n    padding: 1rem;\n    text-align: center;\n`;\n\nconst ResultadoCotizacion = styled.div`\n    text-align: center;\n    padding: .5rem;\n    border: 1px solid #26C6DA;\n    background-color: rgb(127,224,237);\n    margin-top: 1rem;\n    position: relative;\n`;\n\nconst TextoCotizacion = styled.p`\n    color: #00838F;\n    padding: 1rem;\n    text-transform: uppercase; \n    font-weight: bold;\n    margin: 0;\n`\n\nconst Resultado = ({ cotizacion }) => {\n    \n    return (\n        (cotizacion === 0) ?<Mensaje>Elige marca, año y tipo</Mensaje>:\n            (\n                <ResultadoCotizacion>\n                    <TextoCotizacion>El total es: $ {cotizacion}</TextoCotizacion>\n                </ResultadoCotizacion>\n            )\n    )\n}\n\nResultado.propTypes = {\n    cotizacion : PropTypes.number.isRequired\n}\n\nexport default Resultado\n","import React, {useState} from 'react';\nimport styled from '@emotion/styled';\nimport Header from \"./components/Header\";\nimport Formulario from './components/Formulario';\nimport Resumen from './components/Resumen';\nimport Resultado from './components/Resultado';\n\nconst Container = styled.div`\n  max-width: 100%;\n  margin: auto 0;\n`;\n\nconst ContainerForm = styled.div`\n  background-color: #FFFFFF;\n  padding: 3rem;\n`;\n\nfunction App() {\n  \n  const [resumen, guardarResumen] = useState({\n    cotizacion: 0,\n    datos : {\n      marca: '',\n      year: '',\n      plan: ''\n    }\n  });\n\n  const { cotizacion, datos } = resumen;\n  \n  return (\n    <Container>\n      <Header titulo=\"Cotizador de seguros\"/>\n      <ContainerForm>\n        <Formulario\n          guardarResumen={guardarResumen} />\n        <Resumen datos={datos} />\n        <Resultado cotizacion={ cotizacion}/>\n      </ContainerForm>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}